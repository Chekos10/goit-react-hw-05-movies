{"version":3,"file":"static/js/695.930b0cf7.chunk.js","mappings":"+PACA,EAA8B,4BAA9B,EAAuE,2BAAvE,EAA+G,2BAA/G,EAAuJ,2B,SCgDvJ,EA1Ce,WACf,OAA6BA,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAiCF,EAAAA,EAAAA,WAAS,GAA1C,eAAOG,EAAP,KAAiBC,EAAjB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAkBH,OAfJE,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAJ,CACA,IAAMG,EAAW,mCAAG,gHAEYC,EAAAA,EAAAA,IAAaJ,GAFzB,gBAELK,EAFK,EAELA,QACPR,EAAUQ,GAHE,gDAKZC,QAAQC,IAAR,MACAR,GAAa,GAND,yBAQZA,GAAa,GARD,4EAAH,qDAWjBI,GAZmB,CAatB,GAAC,CAACH,KAEK,iBAAKQ,UAAU,YAAf,UACCV,IAAa,SAACW,EAAA,EAAD,KACd,wBAAI,aACJ,eAAID,UAAWE,EAAf,SACCd,EAAQe,OAAS,EACdf,EAAQgB,KAAI,SAAAC,GACR,OACI,gBAAIL,UAAWE,EAAf,WACA,eAAGF,UAAWE,EAAd,UAA8B,YAAUG,EAAOC,WAC/C,cAAGN,UAAWE,EAAd,SAA+BG,EAAOE,YAFFF,EAAOG,GAKlD,KAED,uBAAG,iDAKd,C","sources":["webpack://react-homework-template/./src/pages/Review.module.css?94ba","pages/Review.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Review_reviewsList__VG8rt\",\"reviewCard\":\"Review_reviewCard__6UJFt\",\"authorName\":\"Review_authorName__gUhNb\",\"reviewText\":\"Review_reviewText__96kAT\"};","import { Loader } from \"components/Loader/Loader\"\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router\"\nimport { movieReviews } from \"services/services\"\nimport css from '../pages/Review.module.css'\n\n\nconst Review = () =>{\nconst [reviews, setReview] = useState([])\nconst [isLoading,setIsLoading] = useState(true)\nconst {movieId} = useParams()\n\n\nuseEffect(()=>{\n    if(!movieId) return;\n    const fetchReview = async () =>{\n        try{\n            const {results} = await movieReviews(movieId)\n            setReview(results)\n        }catch(error){\n            console.log(error)\n            setIsLoading(false)\n        }finally{\n            setIsLoading(false)\n        }\n    }\n    fetchReview()\n},[movieId])\n    return(\n        <div className=\"container\">\n        {isLoading && <Loader/>}\n        <h2>Reviews</h2>\n        <ul className={css.reviewsList}>\n        {reviews.length > 0 ? (\n            reviews.map(review => {\n                return (\n                    <li className={css.reviewCard} key={review.id}>\n                    <p className={css.authorName}>Author : {review.author}</p>\n                    <p className={css.reviewText}>{review.content}</p>\n                    </li>\n                )\n            })\n        ):(\n            <p>We don't have any reviews for this movie</p>\n        )}\n        </ul>\n        </div>\n    )\n}\nexport default Review;"],"names":["useState","reviews","setReview","isLoading","setIsLoading","movieId","useParams","useEffect","fetchReview","movieReviews","results","console","log","className","Loader","css","length","map","review","author","content","id"],"sourceRoot":""}