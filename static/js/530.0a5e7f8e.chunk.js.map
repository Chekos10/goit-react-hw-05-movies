{"version":3,"file":"static/js/530.0a5e7f8e.chunk.js","mappings":"sKACA,MAAyB,uB,kBCCZA,EAAS,WAClB,OACI,gBAAKC,UAAWC,EAAhB,UACA,SAAC,KAAD,CACAC,OAAQ,IACRC,MAAO,IACPC,OAAQ,EACRC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,uJChBD,EAA4B,0BAA5B,EAAkE,0BAAlE,EAAwG,0BAAxG,EAA+I,2B,SCyE/I,EApEe,WACb,OAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAcL,EAAOM,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,uFACZP,EADY,uBAEfK,GAAa,GAFE,oDAMIG,EAAAA,EAAAA,IAAYR,GANhB,QAMTS,EANS,UAQbV,EAAUU,EAAKC,SACfL,GAAa,IATA,kDAYfM,QAAQC,IAAR,MACAP,GAAa,GAbE,0DAAH,qDAgBhBE,GACD,GAAE,CAACP,IAUN,OACI,4BACA,kBAAMhB,UAAWC,EAAgB4B,SAVd,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAYF,EAAMG,OAAOC,SAASvB,OAAOwB,MAC/CvB,EAAU,CACRwB,MAAOJ,GAEV,EAIC,WACI,kBACIK,KAAK,OACLC,aAAa,MACbC,KAAK,SACLC,WAAS,EACTC,YAAY,kBAEhB,mBAAQJ,KAAK,SAAb,SAAsB,cAEzBjB,GACC,SAACrB,EAAA,EAAD,KAEA,gBAAIC,UAAWC,EAAf,UACGa,EAAO4B,KAAI,SAAAC,GAAK,OACjB,eAAI3C,UAAWC,EAAf,UACA,SAAC,KAAD,CACID,UAAWC,EACX2C,MAAO,CAAEC,KAAM3B,GAEf4B,GAAE,kBAAaH,EAAMI,IAJzB,SAKKJ,EAAMK,OAFFL,EAAMI,KAJqBJ,EAAMI,GADzB,KAWjB,SAAC,KAAD,SAKP,C,+LCxEKE,EAAU,CACdC,IAAI,+BACJC,IAAK,oCAGMC,EAAc,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAChBJ,EAAQC,IADQ,uCAC0BD,EAAQE,MAF3B,uBACrB1B,EADqB,EACrBA,KADqB,kBAIrBA,GAJqB,2CAAH,qDAQdD,EAAW,mCAAG,WAAMb,GAAN,yFACF0C,EAAAA,EAAAA,IAAA,UAClBJ,EAAQC,IADU,iCACkBD,EAAQE,IAD1B,kBACuCxC,GAC5DsC,GAHuB,uBACjBxB,EADiB,EACjBA,KADiB,kBAKlBA,GALkB,2CAAH,sDASX6B,EAAY,mCAAG,WAAMP,GAAN,yFACHM,EAAAA,EAAAA,IAAA,UAClBJ,EAAQC,IADU,kBACGH,EADH,oBACiBE,EAAQE,KAC9CF,GAHwB,uBAClBxB,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZ8B,EAAc,mCAAG,WAAMR,GAAN,yFACPM,EAAAA,EAAAA,IAAA,UAChBJ,EAAQC,IADQ,kBACKH,EADL,4BAC2BE,EAAQE,MAF5B,uBACrB1B,EADqB,EACrBA,KADqB,kBAIrBA,GAJqB,2CAAH,sDAOd+B,EAAY,mCAAG,WAAMT,GAAN,yFACLM,EAAAA,EAAAA,IAAA,UAChBJ,EAAQC,IADQ,kBACKH,EADL,4BAC2BE,EAAQE,MAF9B,uBACnB1B,EADmB,EACnBA,KADmB,kBAInBA,GAJmB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx","services/services.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import css from '../Loader/Loader.module.css'\nimport {BallTriangle} from 'react-loader-spinner'\nexport const Loader = () =>{\n    return (\n        <div className={css.loader}>\n        <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#4fa94d\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n        /> \n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"Movies_movieList__UibTY\",\"movieLink\":\"Movies_movieLink__prvJg\",\"movieItem\":\"Movies_movieItem__oPddp\",\"searchForm\":\"Movies_searchForm__H4jJ4\"};","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchMovie } from 'services/services';\nimport css from '../pages/Movies.module.css'\n\nconst Movies = () => {\n  const [search, setSearch] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const searchMovie = search.get('query');\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      if (!searchMovie) {\n        setIsLoading(false)\n        return;\n      }\n      try {\n        const data = await SearchMovie(searchMovie);\n        if (data) {\n          setMovies(data.results);\n          setIsLoading(false)\n        }\n      } catch (error) {\n        console.log(error);\n        setIsLoading(false)\n      }\n    };\n    fetchMovie();\n  }, [searchMovie]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searching = event.target.children.search.value;\n    setSearch({\n      query: searching,\n    });\n  };\n\nreturn (\n    <div>\n    <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"search\"\n            autoFocus\n            placeholder=\"Search movie\"\n        />\n        <button type=\"submit\">Search</button>\n    </form>\n    {isLoading ? (\n      <Loader/>\n    ): (\n      <ul className={css.movieList} >\n        {movies.map(movie => (\n        <li className={css.movieItem}  key={movie.id} >\n        <Link \n            className={css.movieLink}\n            state={{ from: location }}\n            key={movie.id}\n            to={`/Movies/${movie.id}`}>\n            {movie.title}\n        </Link>\n        </li>\n        ))}\n        <Link></Link>\n    </ul>\n    )}\n    </div>\n);\n};\nexport default Movies;","import axios from 'axios';\nconst options = {\n  url:'https://api.themoviedb.org/3',\n  key: 'dd883d862d7cd3ce2da3b10a6f522ee3'\n}\n\nexport const TrendDayMovies = async () => {\n  const {data} = await axios.get(\n    `${options.url}/trending/movie/day?api_key=${options.key}`\n  )\n  return data;\n}\n\n\nexport const SearchMovie = async search => {\n  const { data } = await axios.get(\n    `${options.url}/search/movie?api_key=${options.key}&query=${search}`,\n    options\n  );\n  return data;\n};\n\n\nexport const MovieDetails = async id => {\n  const { data } = await axios.get(\n    `${options.url}/movie/${id}?api_key=${options.key}`,\n    options\n  );\n  return data;\n};\n\nexport const getMovieCredit = async id => {\n  const {data} = await axios.get(\n    `${options.url}/movie/${id}/credits?api_key=${options.key}`\n  )\n  return data;\n}\n\nexport const movieReviews = async id => {\n  const {data} = await axios.get(\n    `${options.url}/movie/${id}/reviews?api_key=${options.key}`\n  )\n  return data;\n}\n"],"names":["Loader","className","css","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","useSearchParams","search","setSearch","useState","movies","setMovies","searchMovie","get","location","useLocation","isLoading","setIsLoading","useEffect","fetchMovie","SearchMovie","data","results","console","log","onSubmit","event","preventDefault","searching","target","children","value","query","type","autoComplete","name","autoFocus","placeholder","map","movie","state","from","to","id","title","options","url","key","TrendDayMovies","axios","MovieDetails","getMovieCredit","movieReviews"],"sourceRoot":""}