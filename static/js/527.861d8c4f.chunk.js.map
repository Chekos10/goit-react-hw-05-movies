{"version":3,"file":"static/js/527.861d8c4f.chunk.js","mappings":"+PACA,EAAwB,oBAAxB,EAAwD,wBAAxD,EAA2F,uBAA3F,EAAiI,2B,SC0DjI,EArDa,WACT,OAAuCA,EAAAA,EAAAA,UAAS,IAAhD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA+BF,EAAAA,EAAAA,WAAS,GAAxC,eAAOG,EAAP,KAAiBC,EAAjB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAkBP,OAhBAE,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAJ,CACA,IAAMG,EAAW,mCAAG,gHAESC,EAAAA,EAAAA,IAAeJ,GAFxB,gBAELK,EAFK,EAELA,KACPR,EAAgBQ,GAHJ,gDAKZC,QAAQC,IAAR,MACAR,GAAa,GAND,yBAQZA,GAAa,GARD,4EAAH,qDAWjBI,GAZmB,CAatB,GAAC,CAACH,KAGC,8BACCF,GACG,SAACU,EAAA,EAAD,KAEA,gBAAKC,UAAWC,EAAhB,SACCd,EAAae,MAAM,EAAG,IAAIC,KAAI,SAAAC,GAC3B,OACI,gBAAKJ,UAAWC,EAAhB,UACI,gBAAID,UAAWC,EAAf,WACA,gBACII,IACID,EAAME,aAAN,0CACqCF,EAAME,eACzC,uBAAG,aAETC,IAAKH,EAAMI,QAEf,iBAAKR,UAAWC,EAAhB,WACI,uBAAIG,EAAMI,QACV,uBAAIJ,EAAMK,mBAZkBL,EAAMM,GAiBjD,OAKZ,C","sources":["webpack://react-homework-template/./src/pages/Cast.module.css?8b09","pages/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cards\":\"Cast_cards__WI-Xj\",\"actorCard\":\"Cast_actorCard__wapTn\",\"cardItem\":\"Cast_cardItem__9kSG1\",\"actorDetails\":\"Cast_actorDetails__DOsJT\"};","import { Loader } from \"components/Loader/Loader\"\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router\"\nimport { getMovieCredit } from \"services/services\"\nimport css from '../pages/Cast.module.css'\n\nconst Cast = () =>{\n    const [movieCredits, setMovieCredits]= useState([])\n    const [isLoading,setIsLoading]=useState(true)\n    const {movieId} = useParams()\n\n    useEffect(()=>{\n        if(!movieId) return;\n        const fetchActors = async () => {\n            try{\n                const {cast} = await getMovieCredit(movieId)\n                setMovieCredits(cast)\n            }catch(error){\n                console.log(error)\n                setIsLoading(false)\n            }finally{\n                setIsLoading(false)\n            }\n        }\n        fetchActors()\n    },[movieId])\n\n    return (\n        <>\n        {isLoading ? (\n            <Loader/>\n        ):(\n            <div className={css.cards}>\n            {movieCredits.slice(0, 10).map(actor =>{\n                return (\n                    <div className={css.actorCard} key={actor.id}>\n                        <li className={css.cardItem}>\n                        <img\n                            src={\n                                actor.profile_path\n                                ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                                : <p>No Photo</p>\n                            }\n                            alt={actor.name}\n                        />\n                        <div className={css.actorDetails}>\n                            <p>{actor.name}</p>\n                            <p>{actor.character}</p>\n                        </div>\n                        </li>\n                    </div>\n                )\n            })}\n            </div>\n        )}\n        </>\n    )\n}\n\nexport default Cast;"],"names":["useState","movieCredits","setMovieCredits","isLoading","setIsLoading","movieId","useParams","useEffect","fetchActors","getMovieCredit","cast","console","log","Loader","className","css","slice","map","actor","src","profile_path","alt","name","character","id"],"sourceRoot":""}